#To run, go to folder containing manage.py with the following command: >python manage.py [script name]from django.core.management.base import BaseCommand, CommandErrorimport csv'''import requestsimport datetimeimport reimport randomimport time#from blog.models import DJ_index, SP500_index'''class Command(BaseCommand):	help = "Combine ticker symbols from DJ and S&P500 indices"	def handle(self, *args, **options):		filenames = ['DJ_index.csv', 'SP500_index.csv']		with open('combo_index.csv', 'w') as outfile:			for fname in filenames:				with open(fname) as infile:					for line in infile:						outfile.write(line)		'''		if SP500_list:  #To avoid entering duplicate data, only enter into sql database if SP500_list is neither empty nor null.			fields = ['Day', 'Symbol']  #Must match individual column names in models.py for entry into database.			with open('SP500_index.csv', 'rb') as file:  # May need to use absolute path when on Pythonanywhere server (i.e. use '/home/cqcum6er/my-first-blog/SP500_index.csv' as file path.)				infile = csv.reader(file, delimiter=",", quotechar='"')  #Specify csv item boundary.				LastRowDate = ""  #Reserve a variable for the date from last row .				#print type(LastRowDate)				for row in reversed(list(infile)):  #Read csv file in reverse order or the most recent entry 1st for display on server; must convert csv reader object to list format 1st with list().					if row[0] == LastRowDate or LastRowDate == "":  #Keep write to database while the date is still the same as last entry.						SP500_index.objects.create(**dict(zip(fields, row)))  #zip() combines two lists into one list of pairs of items from both lists (fields and row). dict() converts the list of pairs into a dictionary. (**{'key': 'value'}) is the equivalent of function(key='value').						LastRowDate = row[0]  #Mark the current date for comparison to the next date from the next row.					else:						break						'''