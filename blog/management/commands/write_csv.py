#To run, go to folder containing manage.py with the following command: >python manage.py [script name]from django.core.management.base import BaseCommand, CommandErrorimport csvimport requestsclass Command(BaseCommand):	help = "Populates csv file for DJ list"	def KeyFet(self,sep,num):  #KeyFet() function fetches components of key statistics page; att=attribute, sep=separator, num=Nth separator		att = ""		for ch in html.split(sep)[num]:			if ch != "<":				att += ch			else:				break #terminates the nearest enclosing loop when '<' is ran into (the loop control target, ch, keeps its current value).		return att	def handle(self, *args, **options):		global html #Makes html accessible to KeyFet function (line 10).		with open('DJ_list.csv', 'wb') as file:			#file = open('DJ_list.csv', 'wb')			outfile = csv.writer(file, delimiter=",", quotechar='"')			response = requests.get('http://finance.yahoo.com/q/cp?s=%5EDJI+Components')			html = response.text  #Converts page request to string variable.			DJlist = []			for iter in xrange(5,35):				DJsym = ""				for ch in html.split('/q?s=')[iter]:					if ch != "\"":						DJsym += ch					else:						break #Continue next iteration in outer 'for' loop when '"' is ran into.				DJlist.append(DJsym.encode('ascii'))			print DJlist			outfile.writerow(['Symbol', 'Last Price', '52-week Change', '52-week Low', '52-week High', '5 Year Average Dividend Yield', 'Trailing P/E', 'Forward P/E', 'PEG Ratio', 'Price/Sales', 'Price/Book', 'Market Cap', 'Levered Free Cash Flow', 'Market Per Cash Flow', 'Enterprise Value/EBITDA', 'Name'])			for tick in DJlist:				#print tick				response = requests.get('http://finance.yahoo.com/q/ks?s='+tick+'+Key+Statistics')				html = response.text  #Cnnvert requests object to string.				if 'tabledata1\">' in html:					LastPrice = ""					if 'yfs_l84_' in html:						for ch in html.split('yfs_l84_')[1]:							if ch != '<':								LastPrice += ch							else:								break						#print LastPrice						LP_Split = LastPrice.split('>')						LP = LP_Split[1].replace(',','')						#outfile.writerow(LP)						#print LP					_52WkChg = ""					for ch in html.split('tabledata1\">')[33]:						if ch != "<":							_52WkChg += ch						else:							break						#outfile.writerow(_52WkChg)					#print _52WkChg					_52WkLo = self.KeyFet('tabledata1\">',36)					#outfile.writerow(_52WkLo)					_52WkHi = self.KeyFet('tabledata1\">',35)					#outfile.writerow(_52WkHi)					Div = self.KeyFet('tabledata1\">',53)					#outfile.writerow(Div)					tPE = self.KeyFet('tabledata1\">',3)					#outfile.writerow(tPE)					fPE = self.KeyFet('tabledata1\">',4)					#outfile.writerow(fPE)					PEG = self.KeyFet('tabledata1\">',5)					#outfile.writerow(PEG)					PpS = self.KeyFet('tabledata1\">',6)					#outfile.writerow(PpS)					PpB = self.KeyFet('tabledata1\">',7)					#outfile.writerow(PpB)					MktCap = ""					if 'yfs_j10_' in html:						for ch in html.split('yfs_j10_')[1]:							if ch != '<':								MktCap += ch							else:								break						MC_Split = MktCap.split('>')						MktCap = MC_Split[1]						#outfile.writerow(MktCap)					else:						MktCap = self.KeyFet('tabledata1\">',1)						#outfile.writerow(MktCap)					FCF = self.KeyFet('tabledata1\">',31)					#outfile.writerow(FCF)					if MktCap[-1] == "T":						MCflo = float(MktCap[:-1])*10**6					elif MktCap[-1] == "B":						MCflo = float(MktCap[:-1])*1000					elif MktCap[-1] == "M":						MCflo = float(MktCap[:-1])					elif MktCap[-1] == "K":						MCflo = float(MktCap[:-1])/1000					else:						continue					if FCF[-1] == "B":						FCFflo = float(FCF[:-1])*1000						MpC = str(MCflo/FCFflo)					elif FCF[-1] == "M":						FCFflo = float(FCF[:-1])						MpC = str(MCflo/FCFflo)					elif FCF[-1] == "K":						FCFflo = float(FCF[:-1])/1000						MpC = str(MCflo/FCFflo)					else:						MpC = "N/A"					#outfile.writerow(MpC)					EpE = self.KeyFet('tabledata1\">',9)					#outfile.writerow(EpE)					Name = ""					for ch in html.split('<h2>')[2]:						if ch != "<":							Name += ch						else:							break					outfile.writerow([tick,LP,_52WkChg,_52WkLo,_52WkHi,Div,tPE,fPE,PEG,PpS,PpB,MktCap,FCF,MpC,EpE,Name])